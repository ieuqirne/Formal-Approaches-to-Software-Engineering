Summary of SPARK analysis
=========================

--------------------------------------------------------------------------------------------------------
SPARK Analysis results        Total       Flow   Interval   CodePeer      Provers   Justified   Unproved
--------------------------------------------------------------------------------------------------------
Data Dependencies                 .          .          .          .            .           .          .
Flow Dependencies                 .          .          .          .            .           .          .
Initialization                    5          5          .          .            .           .          .
Non-Aliasing                      .          .          .          .            .           .          .
Run-time Checks                  23          .          4          .    19 (CVC4)           .          .
Assertions                        .          .          .          .            .           .          .
Functional Contracts             22          .          .          .    22 (CVC4)           .          .
LSP Verification                  .          .          .          .            .           .          .
--------------------------------------------------------------------------------------------------------
Total                            50    5 (10%)     4 (8%)          .     41 (82%)           .          .


max steps used for successful proof: 139

Analyzed 5 units
in unit main, 0 subprograms and packages out of 1 analyzed
  Main at main.adb:7 skipped
in unit reactor, 4 subprograms and packages out of 4 analyzed
  reactor at reactor.ads:1 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (0 checks)
  reactor.EngineOff at reactor.ads:28 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (1 checks)
  reactor.EngineOn at reactor.ads:24 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (1 checks)
  reactor.calculatePower at reactor.ads:32 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (4 checks)
in unit train, 12 subprograms and packages out of 12 analyzed
  train at train.ads:4 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (0 checks)
  train.addCarriage at train.ads:29 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (3 checks)
  train.addRod at train.ads:37 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (4 checks)
  train.addWaterReactor at train.ads:53 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (3 checks)
  train.calcTemp at train.ads:49 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (3 checks)
  train.calculateSpeed at train.ads:24 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (7 checks)
  train.calculateWeight at train.ads:45 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (4 checks)
  train.decreaseCarriage at train.ads:33 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (3 checks)
  train.decreaseRod at train.ads:41 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (4 checks)
  train.decreaseWaterReactor at train.ads:58 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (3 checks)
  train.overHeatStop at train.ads:63 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (1 checks)
  train.trainToMaintenance at train.ads:67 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (1 checks)
in unit water, 3 subprograms and packages out of 3 analyzed
  water at water.ads:1 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (0 checks)
  water.ConstructWaterTank at water.ads:22 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (0 checks)
  water.Update at water.ads:15 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (2 checks)
in unit watertank, 2 subprograms and packages out of 2 analyzed
  waterTank at watertank.ads:1 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (0 checks)
  waterTank.returnWaterStatus at watertank.ads:15 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (1 checks)
