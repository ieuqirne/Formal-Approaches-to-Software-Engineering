Summary of SPARK analysis
=========================

-------------------------------------------------------------------------------------------------------
SPARK Analysis results        Total      Flow   Interval   CodePeer      Provers   Justified   Unproved
-------------------------------------------------------------------------------------------------------
Data Dependencies                 .         .          .          .            .           .          .
Flow Dependencies                 .         .          .          .            .           .          .
Initialization                    3         3          .          .            .           .          .
Non-Aliasing                      .         .          .          .            .           .          .
Run-time Checks                  20         .          2          .    18 (CVC4)           .          .
Assertions                        .         .          .          .            .           .          .
Functional Contracts             20         .          .          .    17 (CVC4)           .          3
LSP Verification                  .         .          .          .            .           .          .
-------------------------------------------------------------------------------------------------------
Total                            43    3 (7%)     2 (5%)          .     35 (81%)           .     3 (7%)


max steps used for successful proof: 1

Analyzed 5 units
in unit main, 0 subprograms and packages out of 1 analyzed
  Main at main.adb:6 skipped
in unit reactor, 6 subprograms and packages out of 6 analyzed
  reactor at reactor.ads:1 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (0 checks)
  reactor.EngineOff at reactor.ads:30 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (1 checks)
  reactor.EngineOn at reactor.ads:26 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (1 checks)
  reactor.addRod at reactor.ads:39 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (2 checks)
  reactor.calculatePower at reactor.ads:43 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (4 checks)
  reactor.decreaseRod at reactor.ads:35 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (2 checks)
in unit train, 4 subprograms and packages out of 4 analyzed
  train at train.ads:3 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (0 checks)
  train.addCarriage at train.ads:31 flow analyzed (0 errors, 0 checks and 0 warnings) and not proved, 2 checks out of 3 proved
  train.calculateSpeed at train.ads:22 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (7 checks)
  train.calculateWeight at train.ads:35 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (7 checks)
in unit water, 3 subprograms and packages out of 3 analyzed
  water at water.ads:1 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (0 checks)
  water.ConstructWaterTank at water.ads:22 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (0 checks)
  water.Update at water.ads:15 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (2 checks)
in unit watertank, 5 subprograms and packages out of 5 analyzed
  waterTank at watertank.ads:1 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (0 checks)
  waterTank.ConstructWaterTank at watertank.ads:31 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (0 checks)
  waterTank.Update at watertank.ads:22 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (2 checks)
  waterTank.UpdateWaterLevel at watertank.ads:15 flow analyzed (0 errors, 0 checks and 0 warnings) and not proved, 3 checks out of 5 proved
  waterTank.UpdateWaterStatus at watertank.ads:26 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (4 checks)
